import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.RecordingApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.FailedRecordingEntityListing;

public class ExamplegetRecordingJobFailedrecordings {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        RecordingApi apiInstance = new RecordingApi();
        String jobId = "jobId_example"; // String | jobId
Integer pageSize = 25; // Integer | Page size. Maximum is 100.
Integer pageNumber = 1; // Integer | Page number
Boolean includeTotal = true; // Boolean | If false, cursor will be used to locate the page instead of pageNumber. It is recommended to set it to false for improved performance.
String cursor = "cursor_example"; // String | Indicates where to resume query results (not required for first page)
        try { 
            // Get IDs of recordings that the bulk job failed for
            FailedRecordingEntityListing result = apiInstance.getRecordingJobFailedrecordings(jobId, pageSize, pageNumber, includeTotal, cursor);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling RecordingApi#getRecordingJobFailedrecordings");
            e.printStackTrace();
        }
    }
}