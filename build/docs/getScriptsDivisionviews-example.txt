import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ScriptsApi;
import com.mypurecloud.sdk.v2.model.ScriptEntityListing;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetScriptsDivisionviews {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ScriptsApi apiInstance = new ScriptsApi();
        Integer pageSize = 25; // Integer | Page size
Integer pageNumber = 1; // Integer | Page number
String expand = "expand_example"; // String | Expand
String name = "name_example"; // String | Name filter
String feature = "feature_example"; // String | Feature filter
String flowId = "flowId_example"; // String | Secure flow id filter
String sortBy = "sortBy_example"; // String | SortBy
String sortOrder = "sortOrder_example"; // String | SortOrder
String scriptDataVersion = "scriptDataVersion_example"; // String | Advanced usage - controls the data version of the script
String divisionIds = "divisionIds_example"; // String | Filters scripts to requested divisionIds
        try { 
            // Get the metadata for a list of scripts
            ScriptEntityListing result = apiInstance.getScriptsDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ScriptsApi#getScriptsDivisionviews");
            e.printStackTrace();
        }
    }
}