import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.JourneyApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.SegmentListing;

public class ExamplegetJourneySegments {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        JourneyApi apiInstance = new JourneyApi();
        String sortBy = "sortBy_example"; // String | Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate).
Integer pageSize = 25; // Integer | Page size
Integer pageNumber = 1; // Integer | Page number
Boolean isActive = true; // Boolean | Determines whether or not to show only active segments.
List<String> segmentIds = Arrays.asList(null); // List<String> | IDs of segments to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 100 segments are allowed per request.
List<String> queryFields = Arrays.asList(null); // List<String> | Segment field(s) to query on. Requires 'queryValue' to also be set.
String queryValue = "queryValue_example"; // String | Value to query on. Requires 'queryFields' to also be set.
        try { 
            // Retrieve all segments.
            SegmentListing result = apiInstance.getJourneySegments(sortBy, pageSize, pageNumber, isActive, segmentIds, queryFields, queryValue);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling JourneyApi#getJourneySegments");
            e.printStackTrace();
        }
    }
}