import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ExternalContactsApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.CursorOrganizationListing;

public class ExamplegetExternalcontactsScanOrganizations {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ExternalContactsApi apiInstance = new ExternalContactsApi();
        Integer limit = 56; // Integer | The number of organizations per page; must be between 10 and 200, default is 100
String cursor = "cursor_example"; // String | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL
String divisionId = "*"; // String | The division to scan over
        try { 
            // Scan for external organizations using paging
            CursorOrganizationListing result = apiInstance.getExternalcontactsScanOrganizations(limit, cursor, divisionId);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ExternalContactsApi#getExternalcontactsScanOrganizations");
            e.printStackTrace();
        }
    }
}