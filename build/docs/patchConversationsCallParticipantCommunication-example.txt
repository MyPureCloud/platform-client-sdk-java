import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ConversationsApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.MediaParticipantRequest;

public class ExamplepatchConversationsCallParticipantCommunication {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ConversationsApi apiInstance = new ConversationsApi();
        String conversationId = "conversationId_example"; // String | conversationId
String participantId = "participantId_example"; // String | participantId
String communicationId = "communicationId_example"; // String | communicationId
MediaParticipantRequest body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant
        try { 
            // Update conversation participant's communication by disconnecting it.
            Empty result = apiInstance.patchConversationsCallParticipantCommunication(conversationId, participantId, communicationId, body);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ConversationsApi#patchConversationsCallParticipantCommunication");
            e.printStackTrace();
        }
    }
}