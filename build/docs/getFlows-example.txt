import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ArchitectApi;
import com.mypurecloud.sdk.v2.model.FlowEntityListing;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetFlows {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ArchitectApi apiInstance = new ArchitectApi();
        List<String> type = Arrays.asList(null); // List<String> | Type
Integer pageNumber = 1; // Integer | Page number
Integer pageSize = 25; // Integer | Page size
String sortBy = "id"; // String | Sort by
String sortOrder = "asc"; // String | Sort order
List<String> id = Arrays.asList(null); // List<String> | ID
String name = "name_example"; // String | Name
String description = "description_example"; // String | Description
String nameOrDescription = "nameOrDescription_example"; // String | Name or description
String publishVersionId = "publishVersionId_example"; // String | Publish version ID
String editableBy = "editableBy_example"; // String | Editable by
String lockedBy = "lockedBy_example"; // String | Locked by
String lockedByClientId = "lockedByClientId_example"; // String | Locked by client ID
String secure = "secure_example"; // String | Secure
Boolean deleted = false; // Boolean | Include deleted
Boolean includeSchemas = false; // Boolean | Include variable schemas
Boolean virtualAgentEnabled = true; // Boolean | Include/exclude virtual agent flows
String publishedAfter = 2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01; // String | Published after
String publishedBefore = 2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01; // String | Published before
List<String> divisionId = Arrays.asList(null); // List<String> | division ID(s)
        try { 
            // Get a pageable list of flows, filtered by query parameters
            FlowEntityListing result = apiInstance.getFlows(type, pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, publishVersionId, editableBy, lockedBy, lockedByClientId, secure, deleted, includeSchemas, virtualAgentEnabled, publishedAfter, publishedBefore, divisionId);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ArchitectApi#getFlows");
            e.printStackTrace();
        }
    }
}