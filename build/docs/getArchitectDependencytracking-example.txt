//Import classes:
import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.auth.*;
import com.mypurecloud.sdk.v2.api.request.GetArchitectDependencytrackingRequest;

ApiClient defaultClient = Configuration.getDefaultApiClient();

// Create ApiClient instance
ApiClient apiClient = ApiClient.Builder.standard()
		.withAccessToken(accessToken)
		.withBasePath("https://api.mypurecloud.com")
		.build();

// Use the ApiClient instance
Configuration.setDefaultApiClient(apiClient);

GetArchitectDependencytrackingRequest apiInstance = new GetArchitectDependencytrackingRequest();
String name = "name_example"; // String | Object name to search for
Integer pageNumber = 1; // Integer | Page number
Integer pageSize = 25; // Integer | Page size
List<String> objectType = Arrays.asList("objectType_example"); // List<String> | Object type(s) to search for
Boolean consumedResources = true; // Boolean | Include resources each result item consumes
Boolean consumingResources = true; // Boolean | Include resources that consume each result item
List<String> consumedResourceType = Arrays.asList("consumedResourceType_example"); // List<String> | Types of consumed resources to return, if consumed resources are requested
List<String> consumingResourceType = Arrays.asList("consumingResourceType_example"); // List<String> | Types of consuming resources to return, if consuming resources are requested
try {
    DependencyObjectEntityListing result = apiInstance.getArchitectDependencytracking(name, pageNumber, pageSize, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType);
    System.out.println(result);
} catch (ApiException e) {
    System.err.println("Exception when calling GetArchitectDependencytrackingRequest#getArchitectDependencytracking");
    e.printStackTrace();
}