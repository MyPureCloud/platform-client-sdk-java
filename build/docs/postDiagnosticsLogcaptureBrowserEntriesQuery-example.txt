import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.LogCaptureApi;
import com.mypurecloud.sdk.v2.model.LogCaptureQueryRequest;import com.mypurecloud.sdk.v2.model.LogCaptureQueryResponse;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplepostDiagnosticsLogcaptureBrowserEntriesQuery {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        LogCaptureApi apiInstance = new LogCaptureApi();
        String before = "before_example"; // String | The cursor that points to the start of the set of entities that has been returned.
String after = "after_example"; // String | The cursor that points to the end of the set of entities that has been returned.
String pageSize = "pageSize_example"; // String | Number of entities to return. Maximum of 200.
LogCaptureQueryRequest body = new LogCaptureQueryRequest(); // LogCaptureQueryRequest | 
        try { 
            // Query collected log entries. It returns a limited amount of records, to get all records use download endpoint.
            LogCaptureQueryResponse result = apiInstance.postDiagnosticsLogcaptureBrowserEntriesQuery(before, after, pageSize, body);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling LogCaptureApi#postDiagnosticsLogcaptureBrowserEntriesQuery");
            e.printStackTrace();
        }
    }
}