import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.KnowledgeApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.OperationListing;

public class ExamplegetKnowledgeKnowledgebaseOperations {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        KnowledgeApi apiInstance = new KnowledgeApi();
        String knowledgeBaseId = "knowledgeBaseId_example"; // String | Knowledge base ID
String before = "before_example"; // String | The cursor that points to the start of the set of entities that has been returned.
String after = "after_example"; // String | The cursor that points to the end of the set of entities that has been returned.
String pageSize = "pageSize_example"; // String | Number of entities to return. Maximum of 200.
List<String> userId = Arrays.asList(null); // List<String> | If specified, retrieves operations associated with user ids, comma separated values expected.
List<String> type = Arrays.asList(null); // List<String> | If specified, retrieves operations with specified operation type, comma separated values expected.
List<String> status = Arrays.asList(null); // List<String> | If specified, retrieves operations with specified operation status, comma separated values expected.
String interval = "interval_example"; // String | Retrieves the operations modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
List<String> sourceId = Arrays.asList(null); // List<String> | If specified, retrieves operations associated with source ids, comma separated values expected.
        try { 
            // Get operations
            OperationListing result = apiInstance.getKnowledgeKnowledgebaseOperations(knowledgeBaseId, before, after, pageSize, userId, type, status, interval, sourceId);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling KnowledgeApi#getKnowledgeKnowledgebaseOperations");
            e.printStackTrace();
        }
    }
}