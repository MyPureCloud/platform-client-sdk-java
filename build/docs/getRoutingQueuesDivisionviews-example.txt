import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.RoutingApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.QueueEntityListing;

public class ExamplegetRoutingQueuesDivisionviews {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        RoutingApi apiInstance = new RoutingApi();
        Integer pageSize = 25; // Integer | Page size [max value is 100]
Integer pageNumber = 1; // Integer | Page number [max value is 5]
String sortBy = "name"; // String | Sort by
String sortOrder = "asc"; // String | Sort order
String name = "name_example"; // String | Name
List<String> id = Arrays.asList(null); // List<String> | Queue ID(s)
List<String> divisionId = Arrays.asList(null); // List<String> | Division ID(s)
        try { 
            // Get a paged listing of simplified queue objects, filterable by name, queue ID(s), or division ID(s).
            QueueEntityListing result = apiInstance.getRoutingQueuesDivisionviews(pageSize, pageNumber, sortBy, sortOrder, name, id, divisionId);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling RoutingApi#getRoutingQueuesDivisionviews");
            e.printStackTrace();
        }
    }
}