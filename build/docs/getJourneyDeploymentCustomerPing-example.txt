import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.JourneyApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.DeploymentPing;

public class ExamplegetJourneyDeploymentCustomerPing {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        

        JourneyApi apiInstance = new JourneyApi();
        String deploymentId = "deploymentId_example"; // String | The ID of the deployment sending the ping.
String customerCookieId = "customerCookieId_example"; // String | ID of the customer associated with the ping.
String dl = "dl_example"; // String | Document Location: 1) Web Page URL if overridden or URL fragment identifier (window.location.hash). OR  2) Application screen name that the ping request was sent from in the app. e.g. 'home' or 'help. Pings without this parameter will not return actions.
String dt = "dt_example"; // String | Document Title.  A human readable name for the page or screen
String appNamespace = "appNamespace_example"; // String | Namespace of the application (e.g. com.genesys.bancodinero). Used for domain filtering in application sessions
String sessionId = "sessionId_example"; // String | UUID of the customer session. Use the same Session Id for all pings, AppEvents and ActionEvents in the session
Long sinceLastBeaconMilliseconds = 56L; // Long | How long (milliseconds) since the last app event or beacon was sent. The response may return a pollInternvalMilliseconds to reduce the frequency of pings.
        try { 
            // Send a ping.
            DeploymentPing result = apiInstance.getJourneyDeploymentCustomerPing(deploymentId, customerCookieId, dl, dt, appNamespace, sessionId, sinceLastBeaconMilliseconds);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling JourneyApi#getJourneyDeploymentCustomerPing");
            e.printStackTrace();
        }
    }
}