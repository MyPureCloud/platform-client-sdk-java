import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ArchitectApi;
import com.mypurecloud.sdk.v2.model.DataTableRowEntityListing;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetFlowsDatatableRows {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ArchitectApi apiInstance = new ArchitectApi();
        String datatableId = "datatableId_example"; // String | id of datatable
Integer pageNumber = 1; // Integer | Page number
Integer pageSize = 25; // Integer | Page size
Boolean showbrief = true; // Boolean | If true returns just the key value of the row
String sortOrder = "ascending"; // String | Sort order
        try { 
            // Returns the rows for the datatable with the given id
            DataTableRowEntityListing result = apiInstance.getFlowsDatatableRows(datatableId, pageNumber, pageSize, showbrief, sortOrder);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ArchitectApi#getFlowsDatatableRows");
            e.printStackTrace();
        }
    }
}