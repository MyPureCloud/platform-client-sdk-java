import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.TelephonyProvidersEdgeApi;
import com.mypurecloud.sdk.v2.model.TrunkBaseEntityListing;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetTelephonyProvidersEdgesTrunkbasesettings {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        TelephonyProvidersEdgeApi apiInstance = new TelephonyProvidersEdgeApi();
        Integer pageNumber = 1; // Integer | Page number
Integer pageSize = 25; // Integer | Page size
String sortBy = "name"; // String | Value by which to sort
String sortOrder = "ASC"; // String | Sort order
Boolean recordingEnabled = true; // Boolean | Filter trunks by recording enabled
Boolean ignoreHidden = true; // Boolean | Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only.
Boolean managed = true; // Boolean | Filter by managed
List<String> expand = Arrays.asList(null); // List<String> | Fields to expand in the response, comma-separated
String name = "name_example"; // String | Name of the TrunkBase to filter by
        try { 
            // Get Trunk Base Settings listing
            TrunkBaseEntityListing result = apiInstance.getTelephonyProvidersEdgesTrunkbasesettings(pageNumber, pageSize, sortBy, sortOrder, recordingEnabled, ignoreHidden, managed, expand, name);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling TelephonyProvidersEdgeApi#getTelephonyProvidersEdgesTrunkbasesettings");
            e.printStackTrace();
        }
    }
}