import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ExternalContactsApi;
import com.mypurecloud.sdk.v2.model.ReverseWhitepagesLookupResult;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetExternalcontactsReversewhitepageslookup {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ExternalContactsApi apiInstance = new ExternalContactsApi();
        String lookupVal = "lookupVal_example"; // String | User supplied value to lookup contacts/externalOrganizations (supports email addresses, e164 phone numbers, Twitter screen names)
List<String> expand = Arrays.asList(null); // List<String> | which field, if any, to expand
        try { 
            // Look up contacts and externalOrganizations based on an attribute. Maximum of 25 values returned.
            ReverseWhitepagesLookupResult result = apiInstance.getExternalcontactsReversewhitepageslookup(lookupVal, expand);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ExternalContactsApi#getExternalcontactsReversewhitepageslookup");
            e.printStackTrace();
        }
    }
}