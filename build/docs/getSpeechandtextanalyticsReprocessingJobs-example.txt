import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.SpeechTextAnalyticsApi;
import com.mypurecloud.sdk.v2.model.ReprocessJobEntityListingResponse;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetSpeechandtextanalyticsReprocessingJobs {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        SpeechTextAnalyticsApi apiInstance = new SpeechTextAnalyticsApi();
        Integer pageSize = 56; // Integer | The page size for the listing. The max that will be returned is 100. Default is 25.
Integer pageNumber = 56; // Integer | The page number for the listing. Defaults to 1.
String sortOrder = "sortOrder_example"; // String | Results are sorted by dateCreated. Please choose the sort order. The default is descending (desc).
String name = "name_example"; // String | Case insensitive partial name to filter by.
        try { 
            // Get the list of Speech & Text Analytics reprocess jobs
            ReprocessJobEntityListingResponse result = apiInstance.getSpeechandtextanalyticsReprocessingJobs(pageSize, pageNumber, sortOrder, name);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling SpeechTextAnalyticsApi#getSpeechandtextanalyticsReprocessingJobs");
            e.printStackTrace();
        }
    }
}