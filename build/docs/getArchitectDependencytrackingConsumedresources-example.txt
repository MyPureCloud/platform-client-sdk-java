import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ArchitectApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.ConsumedResourcesEntityListing;

public class ExamplegetArchitectDependencytrackingConsumedresources {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ArchitectApi apiInstance = new ArchitectApi();
        String id = "id_example"; // String | Consuming object ID
String version = "version_example"; // String | Consuming object version
String objectType = "objectType_example"; // String | Consuming object type.  Only versioned types are allowed here.
List<String> resourceType = Arrays.asList(null); // List<String> | Types of consumed resources to show
Integer pageNumber = 1; // Integer | Page number
Integer pageSize = 25; // Integer | Page size
        try { 
            // Get resources that are consumed by a given Dependency Tracking object
            ConsumedResourcesEntityListing result = apiInstance.getArchitectDependencytrackingConsumedresources(id, version, objectType, resourceType, pageNumber, pageSize);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ArchitectApi#getArchitectDependencytrackingConsumedresources");
            e.printStackTrace();
        }
    }
}