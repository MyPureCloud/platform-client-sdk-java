import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ConversationsApi;
import com.mypurecloud.sdk.v2.model.EmailConversation;import com.mypurecloud.sdk.v2.model.InboundMessageRequest;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplepostConversationsEmailInboundmessages {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ConversationsApi apiInstance = new ConversationsApi();
        String conversationId = "conversationId_example"; // String | conversationId
InboundMessageRequest body = new InboundMessageRequest(); // InboundMessageRequest | Send external email reply
        try { 
            // Send an email to an external conversation. An external conversation is one where the provider is not PureCloud based. This endpoint allows the sender of the external email to reply or send a new message to the existing conversation. The new message will be treated as part of the existing conversation and chained to it.
            EmailConversation result = apiInstance.postConversationsEmailInboundmessages(conversationId, body);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ConversationsApi#postConversationsEmailInboundmessages");
            e.printStackTrace();
        }
    }
}