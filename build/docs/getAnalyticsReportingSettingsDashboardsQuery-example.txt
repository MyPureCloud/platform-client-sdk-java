import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.AnalyticsApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.DashboardConfigurationListing;

public class ExamplegetAnalyticsReportingSettingsDashboardsQuery {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        AnalyticsApi apiInstance = new AnalyticsApi();
        String dashboardType = "dashboardType_example"; // String | List dashboard of given type
String dashboardAccessFilter = "dashboardAccessFilter_example"; // String | Filter dashboard based on the owner of dashboard
String name = "name_example"; // String | name of the dashboard
String dashboardState = "Active"; // String | List dashboard of given state
String sortBy = "desc"; // String | 
Integer pageNumber = 1; // Integer | 
Integer pageSize = 9; // Integer | 
        try { 
            // Get list of dashboard configurations
            DashboardConfigurationListing result = apiInstance.getAnalyticsReportingSettingsDashboardsQuery(dashboardType, dashboardAccessFilter, name, dashboardState, sortBy, pageNumber, pageSize);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling AnalyticsApi#getAnalyticsReportingSettingsDashboardsQuery");
            e.printStackTrace();
        }
    }
}