import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.SpeechTextAnalyticsApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.TopicsEntityListing;

public class ExamplegetSpeechandtextanalyticsTopics {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        SpeechTextAnalyticsApi apiInstance = new SpeechTextAnalyticsApi();
        String nextPage = "nextPage_example"; // String | The key for listing the next page
Integer pageSize = 20; // Integer | The page size for the listing. The max that will be returned is 500.
String state = "state_example"; // String | Topic state. Defaults to latest
String name = "name_example"; // String | Case insensitive partial name to filter by
List<String> ids = Arrays.asList(null); // List<String> | Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed.
List<String> dialects = Arrays.asList(null); // List<String> | Comma separated dialect strings to filter by. Maximum of 15 dialects allowed.
String sortBy = "sortBy_example"; // String | Sort results by. Defaults to name
String sortOrder = "sortOrder_example"; // String | Sort order. Defaults to asc
        try { 
            // Get the list of Speech & Text Analytics topics
            TopicsEntityListing result = apiInstance.getSpeechandtextanalyticsTopics(nextPage, pageSize, state, name, ids, dialects, sortBy, sortOrder);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling SpeechTextAnalyticsApi#getSpeechandtextanalyticsTopics");
            e.printStackTrace();
        }
    }
}