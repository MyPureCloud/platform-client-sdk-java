//Import classes:
import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.auth.*;
import com.mypurecloud.sdk.v2.api.request.GetSpeechandtextanalyticsTopicsRequest;

ApiClient defaultClient = Configuration.getDefaultApiClient();

// Create ApiClient instance
ApiClient apiClient = ApiClient.Builder.standard()
		.withAccessToken(accessToken)
		.withBasePath("https://api.mypurecloud.com")
		.build();

// Use the ApiClient instance
Configuration.setDefaultApiClient(apiClient);

GetSpeechandtextanalyticsTopicsRequest apiInstance = new GetSpeechandtextanalyticsTopicsRequest();
String nextPage = "nextPage_example"; // String | The key for listing the next page
Integer pageSize = 20; // Integer | The page size for the listing
String state = "state_example"; // String | Topic state. Defaults to latest
String name = "name_example"; // String | Case insensitive partial name to filter by
List<String> ids = Arrays.asList("ids_example"); // List<String> | Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed.
String sortBy = "sortBy_example"; // String | Sort results by. Defaults to name
String sortOrder = "sortOrder_example"; // String | Sort order. Defaults to asc
try {
    TopicsEntityListing result = apiInstance.getSpeechandtextanalyticsTopics(nextPage, pageSize, state, name, ids, sortBy, sortOrder);
    System.out.println(result);
} catch (ApiException e) {
    System.err.println("Exception when calling GetSpeechandtextanalyticsTopicsRequest#getSpeechandtextanalyticsTopics");
    e.printStackTrace();
}