import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.KnowledgeApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.KnowledgeDocumentResponseListing;

public class ExamplegetKnowledgeKnowledgebaseDocuments {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        KnowledgeApi apiInstance = new KnowledgeApi();
        String knowledgeBaseId = "knowledgeBaseId_example"; // String | Knowledge base ID
String before = "before_example"; // String | The cursor that points to the start of the set of entities that has been returned.
String after = "after_example"; // String | The cursor that points to the end of the set of entities that has been returned.
String pageSize = "pageSize_example"; // String | Number of entities to return. Maximum of 200.
String interval = "interval_example"; // String | Retrieves the documents modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
List<String> documentId = Arrays.asList(null); // List<String> | Retrieves the specified documents, comma separated values expected.
List<String> categoryId = Arrays.asList(null); // List<String> | If specified, retrieves documents associated with category ids, comma separated values expected.
Boolean includeSubcategories = true; // Boolean | Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories.
Boolean includeDrafts = true; // Boolean | If includeDrafts is true, Documents in the draft state are also returned in the response.
List<String> labelIds = Arrays.asList(null); // List<String> | If specified, retrieves documents associated with label ids, comma separated values expected.
List<String> expand = Arrays.asList(null); // List<String> | The specified entity attributes will be filled. Comma separated values expected.
List<String> externalIds = Arrays.asList(null); // List<String> | If specified, retrieves documents associated with external ids, comma separated values expected.
        try { 
            // Get documents.
            KnowledgeDocumentResponseListing result = apiInstance.getKnowledgeKnowledgebaseDocuments(knowledgeBaseId, before, after, pageSize, interval, documentId, categoryId, includeSubcategories, includeDrafts, labelIds, expand, externalIds);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling KnowledgeApi#getKnowledgeKnowledgebaseDocuments");
            e.printStackTrace();
        }
    }
}