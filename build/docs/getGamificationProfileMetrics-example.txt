import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.GamificationApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.GetMetricResponse;import com.mypurecloud.sdk.v2.model.LocalDate;

public class ExamplegetGamificationProfileMetrics {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        GamificationApi apiInstance = new GamificationApi();
        String profileId = "profileId_example"; // String | Performance Profile Id
List<String> expand = Arrays.asList(null); // List<String> | Which fields, if any, to expand.
LocalDate workday = new LocalDate(); // LocalDate | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
String metricIds = "metricIds_example"; // String | List of metric ids to filter the response (Optional, comma-separated).
        try { 
            // All gamified metrics for a given performance profile
            GetMetricResponse result = apiInstance.getGamificationProfileMetrics(profileId, expand, workday, metricIds);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling GamificationApi#getGamificationProfileMetrics");
            e.printStackTrace();
        }
    }
}