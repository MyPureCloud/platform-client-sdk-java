//Import classes:
import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.auth.*;
import com.mypurecloud.sdk.v2.api.request.GetCoachingAppointmentsMeRequest;

ApiClient defaultClient = Configuration.getDefaultApiClient();

// Create ApiClient instance
ApiClient apiClient = ApiClient.Builder.standard()
		.withAccessToken(accessToken)
		.withBasePath("https://api.mypurecloud.com")
		.build();

// Use the ApiClient instance
Configuration.setDefaultApiClient(apiClient);

GetCoachingAppointmentsMeRequest apiInstance = new GetCoachingAppointmentsMeRequest();
String interval = "interval_example"; // String | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
Integer pageNumber = 1; // Integer | Page number
Integer pageSize = 25; // Integer | Page size
List<String> statuses = Arrays.asList("statuses_example"); // List<String> | Appointment Statuses to filter by
List<String> facilitatorIds = Arrays.asList("facilitatorIds_example"); // List<String> | The facilitator IDs for which to retrieve appointments
String sortOrder = "sortOrder_example"; // String | Sort (by due date) either Asc or Desc
List<String> relationships = Arrays.asList("relationships_example"); // List<String> | Relationships to filter by
String completionInterval = "completionInterval_example"; // String | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
String overdue = "overdue_example"; // String | Overdue status to filter by
String intervalCondition = "intervalCondition_example"; // String | Filter condition for interval
try {
    CoachingAppointmentResponseList result = apiInstance.getCoachingAppointmentsMe(interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition);
    System.out.println(result);
} catch (ApiException e) {
    System.err.println("Exception when calling GetCoachingAppointmentsMeRequest#getCoachingAppointmentsMe");
    e.printStackTrace();
}