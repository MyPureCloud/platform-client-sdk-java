import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.ExternalContactsApi;
import com.mypurecloud.sdk.v2.model.CursorExternalSourceListing;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetExternalcontactsExternalsources {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        ExternalContactsApi apiInstance = new ExternalContactsApi();
        String cursor = "cursor_example"; // String | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL
Integer limit = 56; // Integer | The number of ExternalSources per page; must be between 10 and 200, default is 100
String name = "name_example"; // String | Filter by external source name. Filtering is prefix filtering and not an exact match
Boolean active = true; // Boolean | Filter by active status of external source
        try { 
            // Fetch a list of External Sources
            CursorExternalSourceListing result = apiInstance.getExternalcontactsExternalsources(cursor, limit, name, active);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ExternalContactsApi#getExternalcontactsExternalsources");
            e.printStackTrace();
        }
    }
}