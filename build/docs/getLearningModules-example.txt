//Import classes:
import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.auth.*;
import com.mypurecloud.sdk.v2.api.request.GetLearningModulesRequest;

ApiClient defaultClient = Configuration.getDefaultApiClient();

// Create ApiClient instance
ApiClient apiClient = ApiClient.Builder.standard()
		.withAccessToken(accessToken)
		.withBasePath("https://api.mypurecloud.com")
		.build();

// Use the ApiClient instance
Configuration.setDefaultApiClient(apiClient);

GetLearningModulesRequest apiInstance = new GetLearningModulesRequest();
Boolean isArchived = false; // Boolean | Archive status
List<String> types = Arrays.asList("types_example"); // List<String> | Specifies the module types.
Integer pageSize = 25; // Integer | Page size
Integer pageNumber = 1; // Integer | Page number
String sortOrder = "ascending"; // String | Sort order
String sortBy = "name"; // String | Sort by
String searchTerm = "searchTerm_example"; // String | Search Term (searchable by name)
List<String> expand = Arrays.asList("expand_example"); // List<String> | Fields to expand in response(case insensitive)
String isPublished = "Any"; // String | Specifies if only the Unpublished (isPublished is \"False\") or Published (isPublished is \"True\") modules are returned. If isPublished is \"Any\" or omitted, both types are returned
try {
    LearningModulesDomainEntityListing result = apiInstance.getLearningModules(isArchived, types, pageSize, pageNumber, sortOrder, sortBy, searchTerm, expand, isPublished);
    System.out.println(result);
} catch (ApiException e) {
    System.err.println("Exception when calling GetLearningModulesRequest#getLearningModules");
    e.printStackTrace();
}