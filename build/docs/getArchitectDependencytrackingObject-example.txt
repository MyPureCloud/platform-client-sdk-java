//Import classes:
import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.auth.*;
import com.mypurecloud.sdk.v2.api.request.GetArchitectDependencytrackingObjectRequest;

ApiClient defaultClient = Configuration.getDefaultApiClient();

// Create ApiClient instance
ApiClient apiClient = ApiClient.Builder.standard()
		.withAccessToken(accessToken)
		.withBasePath("https://api.mypurecloud.com")
		.build();

// Use the ApiClient instance
Configuration.setDefaultApiClient(apiClient);

GetArchitectDependencytrackingObjectRequest apiInstance = new GetArchitectDependencytrackingObjectRequest();
String id = "id_example"; // String | Object ID
String version = "version_example"; // String | Object version
String objectType = "objectType_example"; // String | Object type
Boolean consumedResources = true; // Boolean | Include resources this item consumes
Boolean consumingResources = true; // Boolean | Include resources that consume this item
List<String> consumedResourceType = Arrays.asList("consumedResourceType_example"); // List<String> | Types of consumed resources to return, if consumed resources are requested
List<String> consumingResourceType = Arrays.asList("consumingResourceType_example"); // List<String> | Types of consuming resources to return, if consuming resources are requested
Boolean consumedResourceRequest = true; // Boolean | Indicate that this is going to look up a consumed resource object
try {
    DependencyObject result = apiInstance.getArchitectDependencytrackingObject(id, version, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType, consumedResourceRequest);
    System.out.println(result);
} catch (ApiException e) {
    System.err.println("Exception when calling GetArchitectDependencytrackingObjectRequest#getArchitectDependencytrackingObject");
    e.printStackTrace();
}