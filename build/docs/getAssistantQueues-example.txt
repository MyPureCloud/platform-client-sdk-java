import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.AgentAssistantsApi;
import com.mypurecloud.sdk.v2.model.AssistantQueueListing;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetAssistantQueues {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        AgentAssistantsApi apiInstance = new AgentAssistantsApi();
        String assistantId = "assistantId_example"; // String | Assistant ID
String before = "before_example"; // String | The cursor that points to the start of the set of entities that has been returned.
String after = "after_example"; // String | The cursor that points to the end of the set of entities that has been returned.
String pageSize = "pageSize_example"; // String | Number of entities to return. Maximum of 200.
String expand = "expand_example"; // String | Which fields, if any, to expand.
        try { 
            // Get all the queues associated with an assistant.
            AssistantQueueListing result = apiInstance.getAssistantQueues(assistantId, before, after, pageSize, expand);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling AgentAssistantsApi#getAssistantQueues");
            e.printStackTrace();
        }
    }
}