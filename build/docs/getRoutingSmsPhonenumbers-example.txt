import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.RoutingApi;
import com.mypurecloud.sdk.v2.model.SmsPhoneNumberEntityListing;import com.mypurecloud.sdk.v2.model.ErrorBody;

public class ExamplegetRoutingSmsPhonenumbers {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        RoutingApi apiInstance = new RoutingApi();
        String phoneNumber = "phoneNumber_example"; // String | Filter on phone number address. Allowable characters are the digits '0-9' and the wild card character '\\*'. If just digits are present, a contains search is done on the address pattern. For example, '317' could be matched anywhere in the address. An '\\*' will match multiple digits. For example, to match a specific area code within the US a pattern like '1317*' could be used.
List<String> phoneNumberType = Arrays.asList(null); // List<String> | Filter on phone number type
List<String> phoneNumberStatus = Arrays.asList(null); // List<String> | Filter on phone number status
List<String> countryCode = Arrays.asList(null); // List<String> | Filter on country code
Integer pageSize = 25; // Integer | Page size
Integer pageNumber = 1; // Integer | Page number
String sortBy = "sortBy_example"; // String | Optional field to sort results
String sortOrder = "sortOrder_example"; // String | Sort order
String language = en-US; // String | A language tag (which is sometimes referred to as a \"locale identifier\") to use to localize country field and sort operations
String integrationId = "integrationId_example"; // String | Filter on the Genesys Cloud integration id to which the phone number belongs to
String supportedContentId = "supportedContentId_example"; // String | Filter based on the supported content ID
        try { 
            // Get a list of provisioned phone numbers.
            SmsPhoneNumberEntityListing result = apiInstance.getRoutingSmsPhonenumbers(phoneNumber, phoneNumberType, phoneNumberStatus, countryCode, pageSize, pageNumber, sortBy, sortOrder, language, integrationId, supportedContentId);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling RoutingApi#getRoutingSmsPhonenumbers");
            e.printStackTrace();
        }
    }
}