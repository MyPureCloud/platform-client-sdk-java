import com.mypurecloud.sdk.v2.ApiClient;
import com.mypurecloud.sdk.v2.ApiException;
import com.mypurecloud.sdk.v2.Configuration;
import com.mypurecloud.sdk.v2.api.BusinessRulesApi;
import com.mypurecloud.sdk.v2.model.ErrorBody;import com.mypurecloud.sdk.v2.model.DecisionTableListing;

public class ExamplegetBusinessrulesDecisiontables {
    public static void main(String[] args) {
        // Create ApiClient instance
        ApiClient apiClient = ApiClient.Builder.standard()
                .withAccessToken("your_access_token")   // or use authorizeClientCredentials(...), authorizeCodeAuthorization(...), authorizePKCE(...) or authorizeSaml2Bearer(...)
                .withBasePath("https://api.mypurecloud.com") // expected format: https://api.[base path]
                .build();
        
        // Use the ApiClient instance
        Configuration.setDefaultApiClient(apiClient);

        BusinessRulesApi apiInstance = new BusinessRulesApi();
        String after = "after_example"; // String | The cursor that points to the end of the set of entities that has been returned.
String pageSize = "pageSize_example"; // String | Number of entities to return. Maximum of 100.
List<String> divisionIds = Arrays.asList(null); // List<String> | One or more comma separated divisions to filters decision tables by. If nothing is provided, the decision tables associated with the list of divisions that the user has access to will be returned.
String name = "name_example"; // String | Search for decision tables with a name that contains the given search string. Search is case insensitive and will match any table that contains this string in any part of the name.
        try { 
            // Get a list of decision tables.
            DecisionTableListing result = apiInstance.getBusinessrulesDecisiontables(after, pageSize, divisionIds, name);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling BusinessRulesApi#getBusinessrulesDecisiontables");
            e.printStackTrace();
        }
    }
}